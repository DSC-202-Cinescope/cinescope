apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
    # 1 master, multiple replicas
  replicas: 6
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - us-west
      containers:
      - name: redis
        image: redis:alpine
        ports:
          - containerPort: 6379
        volumeMounts:
          - name: redis-data
            mountPath: /data
        command:
          - sh
          - "-c"
          - |
            if [[ "$(hostname)" == "redis-0" ]]; then
              echo "Starting as master"
              redis-server --appendonly yes
            else
              echo "Starting as replica of redis-0.redis.default.svc.cluster.local"
              redis-server --appendonly yes --replicaof redis-0.redis.default.svc.cluster.local 6379
            fi
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data
